/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import IDriverExtMgrCallback;
sequenceable OHOS.IRemoteObject;
sequenceable DriverExtMgrTypes..OHOS.ExternalDeviceManager.DeviceData;
sequenceable DriverExtMgrTypes..OHOS.ExternalDeviceManager.DeviceInfoData;
sequenceable DriverExtMgrTypes..OHOS.ExternalDeviceManager.DriverInfoData;

interface OHOS.ExternalDeviceManager.IDriverExtMgr {
    void QueryDevice([out] int errorCode, [in] unsigned int busType, [out] sharedptr<DeviceData>[] devices);
    void BindDevice([out] int errorCode, [in] unsigned long deviceId, [in] IDriverExtMgrCallback connectCallback);
    void UnBindDevice([out] int errorCode, [in] unsigned long deviceId);
    void BindDriverWithDeviceId([out] int errorCode, [in] unsigned long deviceId, [in] IDriverExtMgrCallback connectCallback);
    void UnBindDriverWithDeviceId([out] int errorCode, [in] unsigned long deviceId);
    void QueryDeviceInfo([out] int errorCode, [out] sharedptr<DeviceInfoData>[] deviceInfos, [in] boolean isByDeviceId, [in] unsigned long deviceId);
    void QueryDriverInfo([out] int errorCode, [out] sharedptr<DriverInfoData>[] driverInfos, [in] boolean isByDriverUid, [in] String driverUid);
}